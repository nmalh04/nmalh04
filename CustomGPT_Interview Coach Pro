It uses Python (Flask) for the backend and HTML/JavaScript for a minimal frontend, integrating with the OpenAI API.
 Project Structure
gpt-chatbot-portfolio/
│
├── app.py                    # Flask backend
├── templates/
│   └── index.html            # Frontend UI
├── static/
│   └── script.js             # JS to handle user input
├── .env                      # Your OpenAI API key
├── requirements.txt          # Python dependencies
└── README.md                 # Project overview

app.py

from flask import Flask, render_template, request, jsonify
import openai
import os
from dotenv import load_dotenv

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

app = Flask(__name__)

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/ask", methods=["POST"])
def ask():
    user_input = request.json.get("message")
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "You are Interview Coach Pro, a firm but helpful job interview coach."},
            {"role": "user", "content": user_input}
        ]
    )
    return jsonify({"reply": response['choices'][0]['message']['content']})

templates/index.html
if __name__ == "__main__":
    app.run(debug=True)

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Interview Coach Pro</title>
</head>
<body>
  <h1>Interview Coach Pro</h1>
  <div id="chat"></div>
  <input id="input" placeholder="Ask a question..." />
  <button onclick="sendMessage()">Send</button>
  <script src="/static/script.js"></script>
</body>
</html>

static/script.js
async function sendMessage() {
  const input = document.getElementById("input");
  const message = input.value;
  const chat = document.getElementById("chat");

  chat.innerHTML += `<p><strong>You:</strong> ${message}</p>`;
  input.value = "";

  const res = await fetch("/ask", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ message })
  });
  const data = await res.json();
  chat.innerHTML += `<p><strong>Coach:</strong> ${data.reply}</p>`;
}

 .env
OPENAI_API_KEY=your_openai_api_key_here
